<div class="my-5">
    <h1 class="text-center mb-5">즐겨찾기</h1>
    <div id="div_favorite"></div>
</div>

<script id="temp_favorite" type="x-handlebars-template">
    <table class="table table-striped table-hover">
        <tr>
            <td colspan="7">
                <input type="checkbox" id="all">
                <button class="btn btn-dark btn-all btn-sm ms-3">전체삭제</button>
                <button class="btn btn-dark btn-select btn-sm">선택삭제</button>
            </td>
        </tr>
        {{#each .}}
        <tr>
            <td><input type="checkbox" class="chk"></td>
            <td>{{id}}</td>
            <td>{{place_name}}</td>
            <td>{{phone}}</td>
            <td>{{address_name}}</td>
            <td><button class="btn btn-danger btn-sm" id="{{id}}" place="{{place_name}}">삭제</button></td>
        </tr>
        {{/each}}
    </table>
</script>

<script type="module">
    import { app } from "/javascripts/firebaseInit.js";
    import { getDatabase, ref, onValue, remove } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-database.js";

    const db = getDatabase(app);
    const ref_favorite = ref(db, `favorite/${sessionStorage.getItem("uid")}`);

    $("#div_favorite").on("click", "#all", function () {
        if ($(this).is(":checked")) {
            $("#div_favorite .chk").prop("checked", true);
        } else {
            $("#div_favorite .chk").prop("checked", false);
        }
    });

    $("#div_favorite").on("click", ".chk", function () {
        const all = $("#div_favorite .chk").length;
        const chk = $("#div_favorite .chk:checked").length;

        if (all == chk) {
            $("#div_favorite #all").prop("checked", true);
        } else {
            $("#div_favorite #all").prop("checked", false);
        }
    });

    onValue(ref_favorite, result =>{
        let items = [];

        result.forEach(item => {
            //console.log(item.val());
            items.push(item.val());
        });
        console.log(items);
        const temp = Handlebars.compile($("#temp_favorite").html());
        $("#div_favorite").html(temp(items));
    });

    //삭제 버튼 클릭
    $("#div_favorite").on("click", ".btn-danger", async function () {
        const place = $(this).attr("place");
        if(!confirm(`${place}을(를) 삭제하시겠습니까?`)) return;

        const ref_favorite = ref(db, `favorite/${sessionStorage.getItem("uid")}/${id}`);
        await remove(ref_favorite);
        alert("삭제 완료");
    });

    //선택 삭제 버튼 클릭
    $("#div_favorite").on("click", ".btn-select", function () {
        const chk = $("#div_favorite .chk:checked").length;
        if (!chk) {
            alert("삭제할 즐겨찾기를 선택하세요.");
        } else {
            if (!confirm(chk + "개 즐겨찾기를 삭제하시겠습니까?")) return;
            $("#div_favorite .chk:checked").each(item=>{
                alert('.');
            });
        }
    })

    //전체 삭제 버튼 클릭
    $("#div_favorite").on("click", ".btn-all", function () {
        if (!confirm("모든 즐겨찾기를 삭제하시겠습니까?"));
    })
</script>